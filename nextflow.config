
//                     nextflow based nucMACC pipeline config

// docker settings
docker.enabled = true
process.container = 'uschwartz/nucmacc'
docker.runOptions='-u $(id -u):$(id -g)'



// Global default params, used in configs
params {
  //                    Workflow
  analysis="nucMACC"

  //                    Directories
  // path to Input
  csvInput="$projectDir/toyData/input.csv"
  // path to Output
  outDir="$launchDir/nucMACC_test"
  // path to project
  project="$projectDir"
  // path to pipeline running reports
  tracedir = "${params.outDir}/pipeline_info"
  // path to bowtie2 index
  genomeIdx="$projectDir/toyData/annotation_dm3/Bowtie2Index/genome_chr3R"
  // path to genome fasta
  genome = "$projectDir/toyData/annotation_dm3/Bowtie2Index/genome_chr3R.fasta"


  //                    Options
  help=false
  // path to reference file for TSS plots
  TSS=false
  //Path to file for filtering regions
  blacklist=false
  //efective genome size for normalisation
  genomeSize=5000000
  // correlation method for correlationHeatmap ("spearman" or "pearson")
  correlationMethod="spearman"
  // whether to publish bam files
  publishBam=false
  // whether to publish size selected bam files
  publishBamFlt=false
  // wheter to use bam files created from prior MNaseQC run
  bamEntry = false
  // test RUN with toyData
  test = false
  //raw read filtering
  rawfilt_sub = 5
  rawfilt_mono = 30

  //                    Resources
  // computing resources for processes "low"
  low_memory = 14.GB
  // computing resources for processes "high"
  high_memory = 45.GB


}

// change optional params for test RUN with toyData

if (params.test) {
  params.TSS = "$projectDir/toyData/dm3.refGene_chr3R_cut.gtf"
  params.blacklist = "$projectDir/toyData/dm3-blacklistChromosomes_chr3R_cut.bed"

  //change csvInput for testing bamEntry
  if (params.bamEntry == true) {
    params.csvInput = "$projectDir/toyData/sub_input.csv"
    }

  //additional options for MNaseQC test RUN
  if (params.analysis == "MNaseQC") {
    params.csvInput = "$projectDir/toyData/input_replicates.csv"
    params.outDir="$launchDir/MNaseQC_test"
    params.tracedir = "${params.outDir}/pipeline_info"
    }
}


process {
    withLabel: bigCPU {
        cpus = 5
    }
    withLabel: big {
        cpus = 5
        memory = params.high_memory
    }
    withLabel: mid {
        cpus = 2
        memory = params.low_memory
    }
}

// reporting

manifest {
  name = 'uschwartz/nucMACC'
  author = 'Uwe Schwartz'
  description = 'Nextflow differential MNase-seq analysis pipeline'
  mainScript = 'main.nf'
  version = '01.0.0'
}

// pipeline reports
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  overwrite = true
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}
